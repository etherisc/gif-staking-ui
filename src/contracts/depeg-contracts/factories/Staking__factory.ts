/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bundleRegistryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldRewardRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRewardRate",
        type: "uint256",
      },
    ],
    name: "LogStakingRewardRateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    name: "LogStakingStakedForBundle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldStakingRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newStakingRate",
        type: "uint256",
      },
    ],
    name: "LogStakingStakingRateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "all",
        type: "bool",
      },
    ],
    name: "LogStakingUnstakedFromBundle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DIP_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DIP_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAINNET_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_MAX_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "YEAR_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    name: "calculateCapitalSupport",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetAmount",
        type: "uint256",
      },
    ],
    name: "calculateRequiredStaking",
    outputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "instanceId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "bundleId",
                type: "uint256",
              },
            ],
            internalType: "struct IBundleDataProvider.BundleKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IStakingDataProvider.BundleStakeInfo",
        name: "stakeInfo",
        type: "tuple",
      },
    ],
    name: "calculateRewardsIncrement",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardsAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "fromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "divisor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "getBundleCapitalSupport",
    outputs: [
      {
        internalType: "uint256",
        name: "capitalAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBundleRegistry",
    outputs: [
      {
        internalType: "contract BundleRegistry",
        name: "bundleRegistry",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getBundleStakeInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "instanceId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "bundleId",
                type: "uint256",
              },
            ],
            internalType: "struct IBundleDataProvider.BundleKey",
            name: "key",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IStakingDataProvider.BundleStakeInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getBundleStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "getBundleStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "getStakingRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingWallet",
    outputs: [
      {
        internalType: "address",
        name: "stakingWallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
    ],
    name: "getTotalStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "dipAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasBundleStakeInfo",
    outputs: [
      {
        internalType: "bool",
        name: "hasInfo",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "hasDefinedStakingRate",
    outputs: [
      {
        internalType: "bool",
        name: "hasRate",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oneYear",
    outputs: [
      {
        internalType: "uint256",
        name: "yearInSeconds",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dipTokenAddress",
        type: "address",
      },
    ],
    name: "setDipContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRewardRate",
        type: "uint256",
      },
    ],
    name: "setRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newStakingRate",
        type: "uint256",
      },
    ],
    name: "setStakingRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stakeForBundle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "exp",
        type: "int8",
      },
    ],
    name: "toRate",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstakeFromBundle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "instanceId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "bundleId",
        type: "uint256",
      },
    ],
    name: "unstakeFromBundle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620033303803806200333083398101604081905262000034916200022a565b6200003f33620001cc565b6001600160a01b038116620000ad5760405162461bcd60e51b815260206004820152602a60248201527f4552524f523a53544b2d3030353a42554e444c455f52454749535452595f414460448201526944524553535f5a45524f60b01b606482015260840160405180910390fd5b600580546001600160a01b0383166001600160a01b0319918216179091556006805490911673c719d010b63e5bbf2c0551872cd5316ed26acd83179055604051620000f8906200021c565b604051809103906000f08015801562000115573d6000803e3d6000fd5b50600780546001600160a01b0319166001600160a01b03928316179081905560405163dd45daa160e01b815260216004820152600119602482015291169063dd45daa19060440160206040518083038186803b1580156200017557600080fd5b505afa1580156200018a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b091906200025a565b60095550600b80546001600160a01b0319163017905562000273565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108ae8062002a8283390190565b6000602082840312156200023c578081fd5b81516001600160a01b038116811462000253578182fd5b9392505050565b6000602082840312156200026c578081fd5b5051919050565b6127ff80620002836000396000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c80638a7d7a111161011a578063cdad8bd0116100ad578063f27c3bf61161007c578063f27c3bf61461052a578063f2fde38b14610534578063fc1cd6cc14610547578063fddec1c31461055a578063fe4071d414610575576101fa565b8063cdad8bd01461046f578063d0944ae014610482578063e6f8a14014610495578063e8a9650a14610522576101fa565b8063b0b2f114116100e9578063b0b2f11414610432578063b3fc986e14610445578063b8131a8914610456578063c79606f014610467576101fa565b80638a7d7a11146103d45780638da5cb5b146103e75780638ea13f221461040c5780639e447fc61461041f576101fa565b806348a887061161019257806360cdd6841161016157806360cdd684146103a757806368c33627146103bc578063715018a6146103c45780637e1a3786146103cc576101fa565b806348a887061461033157806350cbf12f1461034457806350f3f7c51461038c57806354ad7acb1461039f576101fa565b806327b58373116101ce57806327b5837314610256578063403042761461029657806340f2a4b7146102a95780634484856714610309576101fa565b8062e9da83146101ff578063089f577f146102255780630dc0ba72146102385780631b7d0c5d14610243575b600080fd5b61021261020d36600461237f565b610588565b6040519081526020015b60405180910390f35b610212610233366004612221565b6105b2565b6102126301e1338081565b6102126102513660046121b5565b6107e2565b610212610264366004612242565b60009283526002602090815260408085209385529281528284206001600160a01b039290921684525290206003015490565b6102126102a43660046121b5565b6109f4565b6102bc6102b7366004612242565b610bf8565b6040805182516001600160a01b03168152602080840151805182840152015181830152908201516060808301919091528201516080808301919091529091015160a082015260c00161021c565b61031c610317366004612209565b610d25565b6040805192835260208301919091520161021c565b61021261033f366004612221565b610db8565b61037c61035236600461218a565b6001600160a01b039190911660009081526001602090815260408083209383529290522054151590565b604051901515815260200161021c565b61021261039a36600461218a565b610f15565b610212602181565b6103ba6103b536600461227a565b61101a565b005b600a54610212565b6103ba61123a565b600854610212565b6103ba6103e23660046121b5565b61124e565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161021c565b61021261041a366004612221565b6113f7565b6103ba61042d366004612209565b6114f0565b6103ba610440366004612221565b61159e565b600b546001600160a01b03166103f4565b6005546001600160a01b03166103f4565b610212600181565b61021261047d366004612209565b6115af565b6103ba61049036600461227a565b61169c565b61037c6104a3366004612242565b60009283526002602081815260408086209486529381528385206001600160a01b039384168652815293839020835160a081018552815490931683528351808501855260018201548152918101548286015293820152600383015491810191909152600482015460608201819052600590920154608090910152151590565b610212601281565b6301e13380610212565b6103ba61054236600461216e565b611a57565b6102126105553660046124fd565b611ad0565b6103f473c719d010b63e5bbf2c0551872cd5316ed26acd8381565b6103ba61058336600461216e565b611b55565b60008082608001514261059b9190612771565b90506105ab836040015182610db8565b9392505050565b60055460405162374cff60e61b815260048101849052602481018390526000916001600160a01b031690630dd33fc09060440160206040518083038186803b1580156105fd57600080fd5b505afa158015610611573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063591906121e9565b610641575060006107dc565b600554604051637c05903960e01b815260048101859052602481018490526000916001600160a01b031690637c0590399060440160006040518083038186803b15801561068d57600080fd5b505afa1580156106a1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106c99190810190612405565b6040516347509f9160e11b815260048101869052602481018590529091506000903090638ea13f229060440160206040518083038186803b15801561070d57600080fd5b505afa158015610721573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074591906124e5565b82518051602090910151604051632018213b60e11b81526001600160a01b03909216600483015260248201526044810182905290915030906340304276906064015b60206040518083038186803b15801561079f57600080fd5b505afa1580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d791906124e5565b925050505b92915050565b6040516350cbf12f60e01b81526001600160a01b0384166004820152602481018390526000908490849030906350cbf12f9060440160206040518083038186803b15801561082f57600080fd5b505afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086791906121e9565b61088c5760405162461bcd60e51b81526004016108839061257c565b60405180910390fd5b60055460405163bbd7d20960e01b81526001600160a01b03888116600483015260248201889052600092169063bbd7d2099060440160006040518083038186803b1580156108d957600080fd5b505afa1580156108ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109159190810190612405565b6001600160a01b03881660009081526001602090815260408083208a84529091529020546060820151919250906109509060ff166012612771565b61095b90600a612671565b60075460405163a391c15b60e01b815260048101899052602481018490526001600160a01b039091169063a391c15b9060440160206040518083038186803b1580156109a657600080fd5b505afa1580156109ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109de91906124e5565b6109e89190612752565b98975050505050505050565b6040516350cbf12f60e01b81526001600160a01b0384166004820152602481018390526000908490849030906350cbf12f9060440160206040518083038186803b158015610a4157600080fd5b505afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7991906121e9565b610a955760405162461bcd60e51b81526004016108839061257c565b60055460405163bbd7d20960e01b81526001600160a01b03888116600483015260248201889052600092169063bbd7d2099060440160006040518083038186803b158015610ae257600080fd5b505afa158015610af6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b1e9190810190612405565b6001600160a01b03881660009081526001602090815260408083208a8452909152902054909150610b516012600a612671565b6060830151610b6190600a612680565b6007546040516332292b2760e21b8152600481018a9052602481018590526001600160a01b039091169063c8a4ac9c9060440160206040518083038186803b158015610bac57600080fd5b505afa158015610bc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be491906124e5565b610bee9190612752565b6109e8919061260b565b610c00612025565b60405163039be28560e61b815260048101859052602481018490526001600160a01b0383166044820152849084908490309063e6f8a1409060640160206040518083038186803b158015610c5357600080fd5b505afa158015610c67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8b91906121e9565b610ca75760405162461bcd60e51b815260040161088390612530565b5050506000938452506002602081815260408086209486529381528385206001600160a01b039384168652815293839020835160a08101855281549093168352835180850185526001820154815291810154828601529382015260038301549181019190915260048201546060820152600590910154608082015290565b60008082600760009054906101000a90046001600160a01b03166001600160a01b03166340490a906040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7757600080fd5b505afa158015610d8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610daf91906124e5565b91509150915091565b600754604051630495746760e51b81526004810183905260009182916301e13380916001600160a01b0316906392ae8ce09060240160206040518083038186803b158015610e0557600080fd5b505afa158015610e19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3d91906124e5565b610e47919061260b565b6007546008546040516332292b2760e21b81529293506000926001600160a01b039092169163c8a4ac9c91610e89918690600401918252602082015260400190565b60206040518083038186803b158015610ea157600080fd5b505afa158015610eb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed991906124e5565b6007549091506001600160a01b031663d05b0452610ef78388612752565b6040518263ffffffff1660e01b815260040161078791815260200190565b600554604051632a8964a760e21b81526001600160a01b03848116600483015260248201849052600092169063aa25929c9060440160206040518083038186803b158015610f6257600080fd5b505afa158015610f76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9a91906121e9565b610ff15760405162461bcd60e51b815260206004820152602260248201527f4552524f523a53544b2d3130303a544f4b454e5f4e4f545f5245474953544552604482015261115160f21b6064820152608401610883565b506001600160a01b03919091166000908152600160209081526040808320938352929052205490565b60405163039be28560e61b8152600481018490526024810183905233604482018190528491849190309063e6f8a1409060640160206040518083038186803b15801561106557600080fd5b505afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d91906121e9565b6110b95760405162461bcd60e51b815260040161088390612530565b600084116111155760405162461bcd60e51b8152602060048201526024808201527f4552524f523a53544b2d3035303a5749544844524157414c5f414d4f554e545f6044820152635a45524f60e01b6064820152608401610883565b6000868152600260208181526040808420898552825280842033808652908352818520825160a08101845281546001600160a01b0316815283518085018552600183015481529582015486860152938401949094526003840154918301919091526004830154606083015260058301546080830152929061119590610588565b905080156111a7576111a78282611c5c565b600019871480156111ba57826003015497505b6111c48389611cfc565b6111ce8489611e04565b604080516001600160a01b0386168152602081018c90529081018a9052606081018990526080810183905281151560a08201527f691c7f3184508cc987c64e22451661b168ab6f372e0f209f12a0e57f6869152b9060c00160405180910390a150505050505050505050565b611242611f38565b61124c6000611f92565b565b611256611f38565b600554604051632a8964a760e21b81526001600160a01b038581166004830152602482018590529091169063aa25929c9060440160206040518083038186803b1580156112a257600080fd5b505afa1580156112b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112da91906121e9565b6113315760405162461bcd60e51b815260206004820152602260248201527f4552524f523a53544b2d3033303a544f4b454e5f4e4f545f5245474953544552604482015261115160f21b6064820152608401610883565b600081116113815760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a53544b2d3033313a5354414b494e475f524154455f5a45524f006044820152606401610883565b6001600160a01b0383166000818152600160209081526040808320868452825291829020805490859055825193845290830185905290820181905260608201839052907fe2e82f5dc272c76b714901de0f9428c2377d0019e0151806f8a7ac2f2e7e74159060800160405180910390a150505050565b60055460405162374cff60e61b815260048101849052602481018390526000916001600160a01b031690630dd33fc09060440160206040518083038186803b15801561144257600080fd5b505afa158015611456573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147a91906121e9565b6114d25760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3037303a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b6064820152608401610883565b50600091825260036020908152604080842092845291905290205490565b6114f8611f38565b6009548111156115595760405162461bcd60e51b815260206004820152602660248201527f4552524f523a53544b2d3036303a5245574152445f455843454544535f4d41586044820152655f56414c554560d01b6064820152608401610883565b600880549082905560408051828152602081018490527fc72cb99b5c347975506823adb0b439c11aaa57b47dc1c93a046753153bbee049910160405180910390a15050565b6115ab828260001961101a565b5050565b600554604051630857aef760e01b8152600481018390526000916001600160a01b031690630857aef79060240160206040518083038186803b1580156115f457600080fd5b505afa158015611608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162c91906121e9565b6116865760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3038303a494e5354414e43455f4e4f545f5245474953604482015264151154915160da1b6064820152608401610883565b506000818152600460205260409020545b919050565b60055460405162374cff60e61b815260048101859052602481018490526001600160a01b0390911690630dd33fc09060440160206040518083038186803b1580156116e657600080fd5b505afa1580156116fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171e91906121e9565b6117765760405162461bcd60e51b815260206004820152602360248201527f4552524f523a53544b2d3034303a42554e444c455f4e4f545f5245474953544560448201526214915160ea1b6064820152608401610883565b600081116117d05760405162461bcd60e51b815260206004820152602160248201527f4552524f523a53544b2d3034313a5354414b494e475f414d4f554e545f5a45526044820152604f60f81b6064820152608401610883565b600554604051630cd82abd60e01b815260048101859052602481018490526000916001600160a01b031690630cd82abd9060440160006040518083038186803b15801561181c57600080fd5b505afa158015611830573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261185891908101906122a5565b905060008160600151600381111561188057634e487b7160e01b600052602160045260246000fd5b14806118af57506001816060015160038111156118ad57634e487b7160e01b600052602160045260246000fd5b145b6119095760405162461bcd60e51b815260206004820152602560248201527f4552524f523a53544b2d3034323a42554e444c455f434c4f5345445f4f525f42604482015264155493915160da1b6064820152608401610883565b6000848152600260209081526040808320868452825280832033808552925290912060048101546119755780546001600160a01b0319166001600160a01b0383161781556040805180820190915286815260200185905260018101869055600281018590554260048201555b6040805160a08101825282546001600160a01b031681528151808301835260018401548152600284015460208281019190915282015260038301549181019190915260048201546060820152600582015460808201526000906119d790610588565b90506119ec826119e783886125f3565b611c5c565b6119f68386611fe2565b604080516001600160a01b03851681526020810189905290810187905260608101869052608081018290527f399461cc89aae47a2f4b183f48dbb8a81586b18d55641bcf4459332acb05bda59060a00160405180910390a150505050505050565b611a5f611f38565b6001600160a01b038116611ac45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610883565b611acd81611f92565b50565b60075460405163dd45daa160e01b815260048101849052600083810b6024830152916001600160a01b03169063dd45daa19060440160206040518083038186803b158015611b1d57600080fd5b505afa158015611b31573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab91906124e5565b611b5d611f38565b6001461415611bd45760405162461bcd60e51b815260206004820152603760248201527f4552524f523a53544b2d3031303a4449505f414444524553535f4348414e474560448201527f5f4e4f545f414c4c4f5745445f4f4e5f4d41494e4e45540000000000000000006064820152608401610883565b6001600160a01b038116611c3a5760405162461bcd60e51b815260206004820152602760248201527f4552524f523a53544b2d3031313a4449505f434f4e54524143545f414444524560448201526653535f5a45524f60c81b6064820152608401610883565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600182015460009081526003602090815260408083206002860154845290915281208054839290611c8e9084906125f3565b9091555050600182015460009081526004602052604081208054839290611cb69084906125f3565b9250508190555080600a6000828254611ccf91906125f3565b9250508190555080826003016000828254611cea91906125f3565b90915550504260059092019190915550565b8160030154811115611d765760405162461bcd60e51b815260206004820152603760248201527f4552524f523a53544b2d3132303a5749544844524157414c5f414d4f554e545f60448201527f455843454544535f5354414b494e475f42414c414e43450000000000000000006064820152608401610883565b600182015460009081526003602090815260408083206002860154845290915281208054839290611da8908490612771565b9091555050600182015460009081526004602052604081208054839290611dd0908490612771565b9250508190555080600a6000828254611de99190612771565b9250508190555080826003016000828254611cea9190612771565b600b546001600160a01b03163014611eac57600654600b546040516323b872dd60e01b81526001600160a01b0391821660048201528482166024820152604481018490529116906323b872dd90606401602060405180830381600087803b158015611e6e57600080fd5b505af1158015611e82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea691906121e9565b506115ab565b60065460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044015b602060405180830381600087803b158015611efb57600080fd5b505af1158015611f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f3391906121e9565b505050565b6000546001600160a01b0316331461124c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610883565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600654600b546040516323b872dd60e01b81526001600160a01b0385811660048301529182166024820152604481018490529116906323b872dd90606401611ee1565b6040518060a0016040528060006001600160a01b03168152602001612060604051806040016040528060008019168152602001600081525090565b81526020016000815260200160008152602001600081525090565b8051611697816127b4565b80516004811061169757600080fd5b80516003811061169757600080fd5b600082601f8301126120b4578081fd5b815167ffffffffffffffff8111156120ce576120ce61279e565b60206120e2601f8301601f191682016125c2565b82815285828487010111156120f5578384fd5b835b838110156121125785810183015182820184015282016120f7565b8381111561212257848385840101525b5095945050505050565b60006040828403121561213d578081fd5b61214760406125c2565b9050815181526020820151602082015292915050565b805160ff8116811461169757600080fd5b60006020828403121561217f578081fd5b81356105ab816127b4565b6000806040838503121561219c578081fd5b82356121a7816127b4565b946020939093013593505050565b6000806000606084860312156121c9578081fd5b83356121d4816127b4565b95602085013595506040909401359392505050565b6000602082840312156121fa578081fd5b815180151581146105ab578182fd5b60006020828403121561221a578081fd5b5035919050565b60008060408385031215612233578182fd5b50508035926020909101359150565b600080600060608486031215612256578081fd5b8335925060208401359150604084013561226f816127b4565b809150509250925092565b60008060006060848603121561228e578081fd5b505081359360208301359350604090920135919050565b6000602082840312156122b6578081fd5b815167ffffffffffffffff808211156122cd578283fd5b9083019061014082860312156122e1578283fd5b6101206122ed816125c2565b6122f7878561212c565b81526040840151602082015261230f6060850161207b565b604082015261232060808501612086565b606082015260a084015183811115612336578586fd5b612342888287016120a4565b60808301525060c084015160a082015260e084015160c082015261010092508284015160e082015281840151838201528094505050505092915050565b600081830360c0811215612391578182fd5b61239b60a06125c2565b83356123a6816127b4565b81526040601f19830112156123b9578283fd5b6123c360406125c2565b91506020840135825260408401356020830152816020820152606084013560408201526080840135606082015260a08401356080820152809250505092915050565b600060208284031215612416578081fd5b815167ffffffffffffffff8082111561242d578283fd5b9083019081850360e0811215612441578384fd5b61244b60c06125c2565b6040821215612458578485fd5b61246260406125c2565b9150835161246f816127b4565b82526020848101519083015281815261248a60408501612095565b602082015260608401519150828211156124a2578485fd5b6124ae878386016120a4565b60408201526124bf6080850161215d565b606082015260a0840151608082015260c084015160a08201528094505050505092915050565b6000602082840312156124f6578081fd5b5051919050565b6000806040838503121561250f578182fd5b82359150602083013580820b8114612525578182fd5b809150509250929050565b6020808252602c908201527f4552524f523a53544b2d3030323a555345525f574954484f55545f42554e444c60408201526b455f5354414b455f494e464f60a01b606082015260800190565b60208082526026908201527f4552524f523a53544b2d3030313a5354414b494e475f524154455f4e4f545f4460408201526511519253915160d21b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff811182821017156125eb576125eb61279e565b604052919050565b6000821982111561260657612606612788565b500190565b60008261262657634e487b7160e01b81526012600452602481fd5b500490565b80825b600180861161263d5750612668565b81870482111561264f5761264f612788565b8086161561265c57918102915b9490941c93800261262e565b94509492505050565b60006105ab600019848461268e565b60006105ab60001960ff8516845b60008261269d575060016105ab565b816126aa575060006105ab565b81600181146126c057600281146126ca576126f7565b60019150506105ab565b60ff8411156126db576126db612788565b6001841b9150848211156126f1576126f1612788565b506105ab565b5060208310610133831016604e8410600b841016171561272a575081810a8381111561272557612725612788565b6105ab565b612737848484600161262b565b80860482111561274957612749612788565b02949350505050565b600081600019048311821515161561276c5761276c612788565b500290565b60008282101561278357612783612788565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611acd57600080fdfea2646970667358221220a6b0f9fbb502f4d3d2f98417fc69e9874150c174ae862c4e6c29a2234a8bf2c064736f6c63430008020033608060405234801561001057600080fd5b5061088e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a391c15b11610071578063a391c15b14610112578063c8a4ac9c14610125578063d05b045214610138578063dd45daa11461014b578063eb646d711461015e578063f30ed59814610166576100a9565b8063059f8b16146100ae5780631a12cd47146100c957806340490a90146100e45780638f24f601146100ec57806392ae8ce0146100ff575b600080fd5b6100b661017b565b6040519081526020015b60405180910390f35b6100d1601281565b60405160009190910b81526020016100c0565b6100b661018a565b6100b66100fa366004610561565b61019d565b6100b661010d366004610549565b610261565b6100b66101203660046105bb565b610279565b6100b66101333660046105bb565b6102ec565b6100b6610146366004610549565b610304565b6100b6610159366004610593565b610311565b6100b66103fb565b61016e600281565b6040516100c091906105dc565b6101876012600a6106c2565b81565b60006101986012600a6106c2565b905090565b600060028260028111156101c157634e487b7160e01b600052602160045260246000fd5b14156102085761020160026101d86012600a6106c2565b6101e2919061065c565b6101ec9085610644565b60016101fa6012600a6106c2565b6000610413565b905061025b565b600082600281111561022a57634e487b7160e01b600052602160045260246000fd5b1415610242576102018360016101fa6012600a6106c2565b6102018360016102546012600a6106c2565b6001610413565b92915050565b600061026f6012600a6106c2565b61025b9083610823565b60008082116102cf5760405162461bcd60e51b815260206004820152601960248201527f4552524f523a464d2d3032303a44495649534f525f5a45524f0000000000000060448201526064015b60405180910390fd5b6102e5836102df6012600a6106c2565b8461048c565b9392505050565b60006102e583836102ff6012600a6106c2565b61048c565b600061025b82600261019d565b60008061031f836012610604565b60000b12156103705760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a464d2d3031303a4558504f4e454e545f544f4f5f534d414c4c0060448201526064016102c6565b61037c601260026107a3565b60000b61038a836012610604565b60000b13156103db5760405162461bcd60e51b815260206004820152601f60248201527f4552524f523a464d2d3031313a4558504f4e454e545f544f4f5f4c415247450060448201526064016102c6565b6103e6826012610604565b6103f190600a6106d1565b6102e59084610823565b60026104096012600a6106c2565b610187919061065c565b60008061042186868661048c565b9050600183600281111561044557634e487b7160e01b600052602160045260246000fd5b14801561047057506000848061046b57634e487b7160e01b600052601260045260246000fd5b868809115b1561048357610480600182610644565b90505b95945050505050565b6000808060001985870985870292508281108382030391505080600014156104d5578382816104cb57634e487b7160e01b600052601260045260246000fd5b04925050506102e5565b8084116104e157600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006020828403121561055a578081fd5b5035919050565b60008060408385031215610573578081fd5b82359150602083013560038110610588578182fd5b809150509250929050565b600080604083850312156105a5578182fd5b82359150602083013580820b8114610588578182fd5b600080604083850312156105cd578182fd5b50508035926020909101359150565b60208101600383106105fe57634e487b7160e01b600052602160045260246000fd5b91905290565b600081810b83820b82821282607f0382138115161561062557610625610842565b82607f1903821281161561063b5761063b610842565b50019392505050565b6000821982111561065757610657610842565b500190565b60008261067757634e487b7160e01b81526012600452602481fd5b500490565b80825b600180861161068e57506106b9565b8187048211156106a0576106a0610842565b808616156106ad57918102915b9490941c93800261067f565b94509492505050565b60006102e560001984846106df565b60006102e560001960ff8516845b6000826106ee575060016102e5565b816106fb575060006102e5565b8160018114610711576002811461071b57610748565b60019150506102e5565b60ff84111561072c5761072c610842565b6001841b91508482111561074257610742610842565b506102e5565b5060208310610133831016604e8410600b841016171561077b575081810a8381111561077657610776610842565b6102e5565b610788848484600161067c565b80860482111561079a5761079a610842565b02949350505050565b600081810b83820b82811383831382607f04841182821616156107c8576107c8610842565b607f19858412828116868305861216156107e4576107e4610842565b8686129250848205861284841616156107ff576107ff610842565b84607f058612818416161561081657610816610842565b5050509102949350505050565b600081600019048311821515161561083d5761083d610842565b500290565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b86db2a3e3956a59d542d71739379d94c17420fccb5b4e6d517a4a9a8325d73264736f6c63430008020033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bundleRegistryAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      bundleRegistryAddress,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    bundleRegistryAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(bundleRegistryAddress, overrides || {});
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
